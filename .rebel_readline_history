1605368592756:(cljs->js {:a 1 :b 2})
1605368608597:(clj->js {:a 1 :b 2})
1605368633609:(println (clj->js {:a 1 :b2}))
1605368649197:(println (clj->js {:a 1 :b \n                  2}))
1605368672466:(. js/console -log "h")
1605368685412:(. js/console \n   log "h")
1605368708085:(. js/console log "what the fuck")
1605368721725:(.log js/console "what the fuck")
1605368727605:(.log js/console "what the ff\nk")
1605368756840:(. js/document getElementById "app")
1605368764447:(def app *1)
1605368774555:(. app children)
1605368785465:(. app -children)
1605368794273:(.-children app)
1605368826444:(. js/Math round 1.1)
1605368839043:(.roud js/Math 1.1)
1605368845294:(.round js/Math 1.1)
1605373477399:(require [figtest.torust3.logic :as logic])
1605373542341:(require '\n          figtest.torust3.logic)
1605373569059:(figtest.torust3.logic/allInd)
1605373669082:(alias 'logic 'figtest.torust3.logic)
1605373685425:(refer \n 'figtest.torust3.logic)
1605373698115:(allInd)
1605373777287:(logic/allInd)
1605373950204:(require '[figtest.torust3.logic :as logic])
1605373956415:(logic/allInd)
1605373983546:(require '[figtest.torust3.tests :as tests])
1605374045841:(= [[0 0] [1 1] [2 2]] (logic/boundedWinners? test/\n                         testboard1))
1605374061903:(= [[0 0] [1 1] [2 2]] (logic/boundedWinners? test/testboard1))
1605374073966:(= [[0 0] [1 1] [2 2]] (logic/boundedWinners? tests/testboard1))
1605374826254:(require '[figtest.torust3.logic :as logic])
1605374873418:(logic/totalBoard (logic/emptyBoard) [0 0] [3 3])
1605397207353:(.. js/window -location -url)
1605397226781:(. js/window -location)
1605397237441:(. js/window -location -href\n   )
1605397243367:(. js/window -location -href)
1605397252956:(.. js/window -location -href)
1605398305216:(index-of "hello" "o")
1605398406498:(clojure.string/index-of "hello" "o")
1605398418512:(clojure.string/index-of "hello" "t")
1605398606802:(getRoute)
1605398680738:(requie '[make100.core :as c])
1605398689562:(require '[make100.core :as c])
1605398695430:(c/getRoute)
1605399430087:(clojure.string/split "http#fuck" #"#")
1605399444779:(clojure.string/split "http" #"#")
1605399525945:(second *1)
1605399824711:(getRoute)
1605399867544:(require '[make100.core :as c])
1605399874370:(c/getRoute)
1605399971076:(defn f [] (fn [] 1))
1605399973926:(f)
1605399977093:((f))
1605399999564:(do (f))
1605400072393:((c/routeMap (c/getRoute)))
